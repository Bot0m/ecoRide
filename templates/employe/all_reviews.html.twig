{% extends 'employe/base.html.twig' %}

{% block title %}Gestion des avis{% endblock %}

{% block employe_content %}
<div class="space-y-6">
    <!-- En-tête de bienvenue -->
    <div class="bg-gradient-to-r from-accent/20 to-accent/10 backdrop-blur-sm rounded-2xl p-6 mb-8 border border-white/20">
        <h1 class="text-title font-title text-textPrimary mb-2">Gestion des avis</h1>
        <p class="text-lg text-textSecondary">{{ totalReviews }} avis au total</p>
    </div>

    <!-- Section Avis à traiter -->
    <div>
        <h2 class="text-subtitle font-title text-textPrimary mb-6">Avis à traiter</h2>
        <div class="space-y-4">
            {% set reviewsToProcess = reviews|filter(r => r.isValidated is null) %}
            {% if reviewsToProcess is empty %}
                <div class="text-center py-12">
                    <svg class="w-16 h-16 text-textSecondary mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
                    </svg>
                    <p class="text-textSecondary">Aucun avis à traiter</p>
                </div>
            {% else %}
                {% for review in reviewsToProcess %}
                    <div class="bg-gradient-to-br from-secondary/70 to-secondary/90 backdrop-blur-xl border border-white/30 rounded-2xl p-6 shadow-xl">
                        <!-- Informations du trajet -->
                        {% if review.participation and review.participation.ride %}
                            <div class="mb-4">
                                <h3 class="text-subtitle font-title text-textPrimary mb-1">{{ review.participation.ride.departure }} → {{ review.participation.ride.arrival }}</h3>
                                <p class="text-textSecondary text-sm">{{ review.participation.ride.date|date('d/m/Y') }} à {{ review.participation.ride.departureTime|date('H:i') }}</p>
                            </div>
                        {% endif %}

                        <!-- Informations des utilisateurs -->
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                            <!-- Expéditeur -->
                            <div class="bg-white/5 rounded-lg p-4 border border-white/10">
                                <div class="mb-2">
                                    <h4 class="text-textPrimary font-base">Expéditeur</h4>
                                </div>
                                <div>
                                    <div class="flex items-center justify-between mb-1">
                                        <p class="text-textPrimary font-base">{{ review.author.pseudo }}</p>
                                        {% set authorRole = review.participation and review.participation.ride and review.participation.ride.driver == review.author ? 'Conducteur' : 'Passager' %}
                                        <span class="text-textSecondary text-sm">{{ authorRole }}</span>
                                    </div>
                                    <a href="mailto:{{ review.author.email }}" 
                                       class="text-textSecondary text-sm hover:text-accent transition-colors cursor-pointer underline decoration-accent/30 hover:decoration-accent">
                                        {{ review.author.email }}
                                    </a>
                                </div>
                            </div>

                            <!-- Receveur -->
                            <div class="bg-white/5 rounded-lg p-4 border border-white/10">
                                <div class="mb-2">
                                    <h4 class="text-textPrimary font-base">Receveur</h4>
                                </div>
                                <div>
                                    <div class="flex items-center justify-between mb-1">
                                        <p class="text-textPrimary font-base">{{ review.reviewedUser.pseudo }}</p>
                                        {% set reviewedRole = review.participation and review.participation.ride and review.participation.ride.driver == review.reviewedUser ? 'Conducteur' : 'Passager' %}
                                        <span class="text-textSecondary text-sm">{{ reviewedRole }}</span>
                                    </div>
                                    <a href="mailto:{{ review.reviewedUser.email }}" 
                                       class="text-textSecondary text-sm hover:text-accent transition-colors cursor-pointer underline decoration-accent/30 hover:decoration-accent">
                                        {{ review.reviewedUser.email }}
                                    </a>
                                </div>
                            </div>
                        </div>

                        <!-- Note et Commentaire -->
                        <div class="mb-4">
                            <div class="flex items-center gap-3 mb-3">
                                <div class="flex items-center gap-1">
                                    {% for i in 1..5 %}
                                        {% if i <= review.rating %}
                                            <svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                            </svg>
                                        {% else %}
                                            <svg class="w-5 h-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                            </svg>
                                        {% endif %}
                                    {% endfor %}
                                </div>
                                <span class="text-textPrimary font-base">{{ review.rating }}/5</span>
                            </div>

                            {% if review.comment %}
                                <div class="bg-white/5 rounded-lg p-3 border border-white/10">
                                    <p class="text-textPrimary italic">"{{ review.comment }}"</p>
                                </div>
                            {% endif %}
                        </div>

                        <!-- Boutons d'action -->
                        <div class="flex gap-2 pt-4 border-t border-white/20">
                            <button onclick="handleReviewAction({{ review.id }}, 'validate')" 
                                    class="bg-primaryLight/30 hover:bg-primaryLight/40 text-primary px-3 py-2 rounded text-sm transition-all duration-300">
                                Accepter
                            </button>
                            <button onclick="handleReviewAction({{ review.id }}, 'reject')" 
                                    class="bg-red-500/20 hover:bg-red-500/30 text-red-400 px-3 py-2 rounded text-sm transition-all duration-300">
                                Refuser
                            </button>
                        </div>
                    </div>
                {% endfor %}
            {% endif %}
        </div>
    </div>

    <!-- Section Historique -->
    <div>
        <h2 class="text-subtitle font-title text-textPrimary mb-6">Historique des avis</h2>
        <div class="space-y-4">
            {% set reviewsHistory = reviews|filter(r => r.isValidated is not null) %}
            {% if reviewsHistory is empty %}
                <div class="text-center py-12">
                    <svg class="w-16 h-16 text-textSecondary mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
                    </svg>
                    <p class="text-textSecondary">Aucun avis dans l'historique</p>
                </div>
            {% else %}
                {% for review in reviewsHistory %}
                    <div class="bg-gradient-to-br from-secondary/70 to-secondary/90 backdrop-blur-xl border border-white/30 rounded-2xl p-6 shadow-xl">
                        <!-- Informations du trajet -->
                        {% if review.participation and review.participation.ride %}
                            <div class="mb-4">
                                <h3 class="text-subtitle font-title text-textPrimary mb-1">{{ review.participation.ride.departure }} → {{ review.participation.ride.arrival }}</h3>
                                <p class="text-textSecondary text-sm">{{ review.participation.ride.date|date('d/m/Y') }} à {{ review.participation.ride.departureTime|date('H:i') }}</p>
                            </div>
                        {% endif %}

                        <!-- Informations des utilisateurs -->
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                            <!-- Expéditeur -->
                            <div class="bg-white/5 rounded-lg p-4 border border-white/10">
                                <div class="mb-2">
                                    <h4 class="text-textPrimary font-base">Expéditeur</h4>
                                </div>
                                <div>
                                    <div class="flex items-center justify-between mb-1">
                                        <p class="text-textPrimary font-base">{{ review.author.pseudo }}</p>
                                        {% set authorRole = review.participation and review.participation.ride and review.participation.ride.driver == review.author ? 'Conducteur' : 'Passager' %}
                                        <span class="text-textSecondary text-sm">{{ authorRole }}</span>
                                    </div>
                                    <a href="mailto:{{ review.author.email }}" 
                                       class="text-textSecondary text-sm hover:text-accent transition-colors cursor-pointer underline decoration-accent/30 hover:decoration-accent">
                                        {{ review.author.email }}
                                    </a>
                                </div>
                            </div>

                            <!-- Receveur -->
                            <div class="bg-white/5 rounded-lg p-4 border border-white/10">
                                <div class="mb-2">
                                    <h4 class="text-textPrimary font-base">Receveur</h4>
                                </div>
                                <div>
                                    <div class="flex items-center justify-between mb-1">
                                        <p class="text-textPrimary font-base">{{ review.reviewedUser.pseudo }}</p>
                                        {% set reviewedRole = review.participation and review.participation.ride and review.participation.ride.driver == review.reviewedUser ? 'Conducteur' : 'Passager' %}
                                        <span class="text-textSecondary text-sm">{{ reviewedRole }}</span>
                                    </div>
                                    <a href="mailto:{{ review.reviewedUser.email }}" 
                                       class="text-textSecondary text-sm hover:text-accent transition-colors cursor-pointer underline decoration-accent/30 hover:decoration-accent">
                                        {{ review.reviewedUser.email }}
                                    </a>
                                </div>
                            </div>
                        </div>

                        <!-- Note et Commentaire -->
                        <div class="mb-4">
                            <div class="flex items-center gap-3 mb-3">
                                <div class="flex items-center gap-1">
                                    {% for i in 1..5 %}
                                        {% if i <= review.rating %}
                                            <svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                            </svg>
                                        {% else %}
                                            <svg class="w-5 h-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                            </svg>
                                        {% endif %}
                                    {% endfor %}
                                </div>
                                <span class="text-textPrimary font-base">{{ review.rating }}/5</span>
                            </div>

                            {% if review.comment %}
                                <div class="bg-white/5 rounded-lg p-3 border border-white/10">
                                    <p class="text-textPrimary italic">"{{ review.comment }}"</p>
                                </div>
                            {% endif %}
                        </div>

                        <!-- Statut de validation -->
                        <div class="flex items-center gap-2 pt-4 border-t border-white/20">
                            {% if review.isValidated %}
                                <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-green-500/20 text-green-400 border border-green-400/30">
                                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                                    </svg>
                                    Accepté
                                </span>
                            {% else %}
                                <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-red-500/20 text-red-400 border border-red-400/30">
                                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                                    </svg>
                                    Refusé
                                </span>
                            {% endif %}
                        </div>
                    </div>
                {% endfor %}
            {% endif %}
        </div>
    </div>

    <!-- Pagination -->
    {% if totalPages > 1 %}
        <div class="flex justify-center mt-8">
            <nav class="flex items-center gap-2">
                {% if currentPage > 1 %}
                    <a href="{{ path('employe_all_reviews', {page: currentPage - 1}) }}" class="px-4 py-2 bg-secondary/70 border border-white/30 rounded-lg text-textSecondary hover:text-accent transition-colors">
                        Précédent
                    </a>
                {% endif %}
                
                {% for page in 1..totalPages %}
                    {% if page == currentPage %}
                        <span class="px-4 py-2 bg-accent text-white rounded-lg">{{ page }}</span>
                    {% else %}
                        <a href="{{ path('employe_all_reviews', {page: page}) }}" class="px-4 py-2 bg-secondary/70 border border-white/30 rounded-lg text-textSecondary hover:text-accent transition-colors">
                            {{ page }}
                        </a>
                    {% endif %}
                {% endfor %}
                
                {% if currentPage < totalPages %}
                    <a href="{{ path('employe_all_reviews', {page: currentPage + 1}) }}" class="px-4 py-2 bg-secondary/70 border border-white/30 rounded-lg text-textSecondary hover:text-accent transition-colors">
                        Suivant
                    </a>
                {% endif %}
            </nav>
        </div>
    {% endif %}
</div>

<!-- Modal de confirmation pour les actions sur les avis -->
<div id="reviewActionModal" class="fixed inset-0 bg-black bg-opacity-50 z-[60] hidden flex items-center justify-center">
    <div class="backdrop-blur-xl backdrop-saturate-150 backdrop-contrast-125 bg-white/30 rounded-2xl shadow-2xl border border-white/30 p-8 max-w-md mx-4 transform transition-all">
        <div class="text-center">
            <h3 id="reviewActionTitle" class="text-subtitle font-title text-backgroundDark mb-2"></h3>
            <p class="text-background mb-6" id="reviewActionText">
                <!-- Le texte sera inséré dynamiquement -->
            </p>
            <div class="flex gap-4 justify-end">
                <button id="confirmReviewActionBtn" class="flex-1 bg-accent hover:bg-accentDark backdrop-blur-sm hover:backdrop-blur-md text-textSecondary hover:text-textPrimary font-base py-3 px-6 rounded-xl transition-all duration-300">
                    <!-- Le texte sera défini dynamiquement -->
                </button>
                <button id="cancelReviewActionBtn" class="flex-1 backdrop-blur-sm bg-background/40 border border-background/30 text-textPrimary font-base py-3 px-6 rounded-xl hover:bg-background/60 transition-all duration-300">
                    Annuler
                </button>
            </div>
        </div>
    </div>
</div>

<script>
let currentReviewData = null;

// Fonction pour gérer les actions sur les avis
function handleReviewAction(reviewId, action) {
    // Stocker les données de l'action
    currentReviewData = {
        reviewId: reviewId,
        action: action
    };
    
    const actionText = action === 'validate' ? 'accepter' : 'refuser';
    const isValidate = action === 'validate';
    
    // Configurer le modal selon l'action
    const title = document.getElementById('reviewActionTitle');
    const text = document.getElementById('reviewActionText');
    const confirmBtn = document.getElementById('confirmReviewActionBtn');
    
    if (isValidate) {
        title.textContent = 'Accepter l\'avis';
        text.textContent = 'Êtes-vous sûr de vouloir accepter cet avis ? Il sera visible par tous les utilisateurs.';
        confirmBtn.textContent = 'Oui, accepter';
        confirmBtn.className = 'bg-accent hover:bg-accentDark backdrop-blur-sm hover:backdrop-blur-md text-textSecondary hover:text-textPrimary font-base py-3 px-6 rounded-xl transition-all duration-300';
    } else {
        title.textContent = 'Refuser l\'avis';
        text.textContent = 'Êtes-vous sûr de vouloir refuser cet avis ? Il sera déplacé dans l\'historique des avis.';
        confirmBtn.textContent = 'Oui, refuser';
        confirmBtn.className = 'bg-accent hover:bg-accentDark backdrop-blur-sm hover:backdrop-blur-md text-textSecondary hover:text-textPrimary font-base py-3 px-6 rounded-xl transition-all duration-300';
    }
    
    // Afficher le modal
    document.getElementById('reviewActionModal').classList.remove('hidden');
}

// Fonction pour confirmer l'action sur l'avis
function confirmReviewAction() {
    if (!currentReviewData) return;
    
    const { reviewId, action } = currentReviewData;
    const actionText = action === 'validate' ? 'accepter' : 'refuser';
    
    // Fermer le modal
    document.getElementById('reviewActionModal').classList.add('hidden');
    
    fetch(`/employe/review/${reviewId}/${action}`, {
        method: 'POST',
        headers: {
            'X-Requested-With': 'XMLHttpRequest'
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showSuccessMessage(data.message || `Avis ${action === 'validate' ? 'accepté' : 'refusé'} avec succès !`);
            setTimeout(() => {
                window.location.reload();
            }, 2000);
        } else {
            alert(data.message || `Erreur lors de l'${actionText} de l'avis`);
        }
    })
    .catch(error => {
        console.error('Erreur:', error);
        alert(`Erreur lors de l'${actionText} de l'avis`);
    });
    
    currentReviewData = null;
}

// Fonction pour afficher un message de succès
function showSuccessMessage(message) {
    const successDiv = document.createElement('div');
    successDiv.className = 'fixed top-4 right-4 z-[80] bg-green-500/20 border border-green-400/30 rounded-lg p-4 backdrop-blur-sm';
    successDiv.innerHTML = `
        <div class="flex items-center gap-3">
            <svg class="w-5 h-5 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
            </svg>
            <span class="text-green-300">${message}</span>
        </div>
    `;
    
    document.body.appendChild(successDiv);
    
    // Supprimer le message après 3 secondes
    setTimeout(() => {
        successDiv.remove();
    }, 3000);
}

// Gestionnaires d'événements pour le modal
document.getElementById('confirmReviewActionBtn').addEventListener('click', confirmReviewAction);

document.getElementById('cancelReviewActionBtn').addEventListener('click', function() {
    document.getElementById('reviewActionModal').classList.add('hidden');
    currentReviewData = null;
});

// Fermer le modal en cliquant en dehors
document.getElementById('reviewActionModal').addEventListener('click', function(event) {
    if (event.target === this) {
        this.classList.add('hidden');
        currentReviewData = null;
    }
});
</script>
{% endblock %} 