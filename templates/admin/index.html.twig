{% extends 'admin/base.html.twig' %}

{% block title %}Dashboard Admin{% endblock %}

{% block admin_content %}
    <!-- En-tête de bienvenue -->
    <div class="bg-gradient-to-r from-accent/20 to-accent/10 backdrop-blur-sm rounded-2xl p-6 mb-8 border border-white/20">
        <h1 class="text-title font-title text-textPrimary mb-2">Bonjour {{ user.pseudo }} ! </h1>
        <p class="text-subtitle font-base text-textSecondary">Bienvenue dans votre espace administrateur Ecoride</p>
    </div>

    <!-- Composants graphiques -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
        <!-- Composant 1: Statistiques utilisateurs avec graphique en colonnes -->
        <div class="bg-gradient-to-br from-accent/20 to-accent/10 backdrop-blur-sm rounded-2xl p-6 border border-accent/30">
            <div class="flex justify-between pb-4 mb-4 border-b border-accentDark">
                <div class="flex items-center">
                    <div class="w-12 h-12 rounded-lg bg-accent/20 flex items-center justify-center me-3">
                        <svg class="w-6 h-6 text-accent" fill="currentColor" viewBox="0 0 20 19">
                            <path d="M14.5 0A3.987 3.987 0 0 0 11 2.1a4.977 4.977 0 0 1 3.9 5.858A3.989 3.989 0 0 0 14.5 0ZM9 13h2a4 4 0 0 1 4 4v2H5v-2a4 4 0 0 1 4-4Z"/>
                            <path d="M5 19h10v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2ZM5 7a5.008 5.008 0 0 1 4-4.9 3.988 3.988 0 1 0-3.9 5.859A4.974 4.974 0 0 1 5 7Zm5 3a3 3 0 1 0 0-6 3 3 0 0 0 0 6Zm5-1h-.424a5.016 5.016 0 0 1-1.942 2.232A6.007 6.007 0 0 1 17 17h2a1 1 0 0 0 1-1v-2a5.006 5.006 0 0 0-5-5ZM5.424 9H5a5.006 5.006 0 0 0-5 5v2a1 1 0 0 0 1 1h2a6.007 6.007 0 0 1 4.366-5.768A5.016 5.016 0 0 1 5.424 9Z"/>
                        </svg>
                    </div>
                    <div>
                        <h5 class="text-subtitle font-title text-accent pb-1">{{ stats.totalUsers }}</h5>
                        <p class="text-body text-textSecondary">utilisateurs inscrits</p>
                    </div>
                </div>
            </div>
            <div class="grid grid-cols-2 mb-4">
                <dl class="flex items-center">
                    <dt class="text-textSecondary text-body font-base me-1">Nouveaux :</dt>
                    <dd class="text-textPrimary text-body font-base">{{ stats.newUsersThisWeek }}</dd>
                </dl>
                <dl class="flex items-center justify-end">
                    <dt class="text-textSecondary text-body font-base me-1">Croissance :</dt>
                    <dd class="text-accent text-body font-base">{{ stats.userGrowth }}%</dd>
                </dl>
            </div>

            <div id="users-column-chart" class="h-48 border-b border-accentDark"></div>

            <div class="grid grid-cols-1 items-center pt-5">
                <div class="flex justify-between items-center">
                    <div class="flex items-center space-x-2">
                        <a href="{{ path('admin_dashboard', {'user_week': stats.userNavigation.previousWeek, 'ride_week': app.request.query.get('ride_week') ?: stats.rideNavigation.selectedWeek}) }}" 
                           class="text-body font-base {{ stats.userNavigation.canGoPrevious ? 'text-textSecondary hover:text-accent' : 'text-tSecondaryLight cursor-not-allowed' }} transition-colors duration-300 inline-flex items-center {{ not stats.userNavigation.canGoPrevious ? 'pointer-events-none' : '' }}">
                            <svg class="w-4 h-4 md:w-3 md:h-3 md:me-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
                            </svg>
                            <span class="hidden md:inline">Précédent</span>
                        </a>
                        <span class="text-body font-base text-textPrimary px-3">{{ stats.userNavigation.weekPeriod }}</span>
                        <a href="{{ path('admin_dashboard', {'user_week': stats.userNavigation.nextWeek, 'ride_week': app.request.query.get('ride_week') ?: stats.rideNavigation.selectedWeek}) }}" 
                           class="text-body font-base {{ stats.userNavigation.canGoNext ? 'text-textSecondary hover:text-accent' : 'text-tSecondaryLight cursor-not-allowed' }} transition-colors duration-300 inline-flex items-center {{ not stats.userNavigation.canGoNext ? 'pointer-events-none' : '' }}">
                            <span class="hidden md:inline">Suivant</span>
                            <svg class="w-4 h-4 md:w-3 md:h-3 md:ms-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                            </svg>
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Composant 2: Statistiques trajets avec graphique en aires -->
        <div class="bg-gradient-to-br from-accent/20 to-accent/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20">
            <div class="flex justify-between pb-4 mb-4 border-b border-accentDark">
                <div class="flex items-center">
                    <div class="w-12 h-12 rounded-lg bg-accent/20 flex items-center justify-center me-3">
                        <svg class="w-6 h-6 text-accent" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M15 10.5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
                            <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1 1 15 0Z" />
                        </svg>
                    </div>
                    <div>
                        <h5 class="text-subtitle font-title text-accent pb-2">{{ stats.totalRides }}</h5>
                        <p class="text-body font-base text-textSecondary">trajets proposés</p>
                    </div>
                </div>
            </div>
            <div class="grid grid-cols-2 mb-4">
                <dl class="flex items-center">
                    <dt class="text-textSecondary text-body font-base me-1">Nouveaux :</dt>
                    <dd class="text-textPrimary text-body font-base">{{ stats.ridesThisWeek }}</dd>
                </dl>
                <dl class="flex items-center justify-end">
                    <dt class="text-textSecondary text-body font-base me-1">Croissance :</dt>
                    <dd class="text-accent text-body font-base">{{ stats.rideGrowth }}%</dd>
                </dl>
            </div>

            <div id="rides-area-chart" class="h-48 border-b border-accentDark"></div>

            <div class="grid grid-cols-1 items-center pt-5">
                <div class="flex justify-between items-center">
                    <div class="flex items-center space-x-2">
                        <a href="{{ path('admin_dashboard', {'ride_week': stats.rideNavigation.previousWeek, 'user_week': app.request.query.get('user_week') ?: stats.userNavigation.selectedWeek}) }}" 
                            class="text-body font-base {{ stats.rideNavigation.canGoPrevious ? 'text-textSecondary hover:text-accent' : 'text-tSecondaryLight cursor-not-allowed' }} transition-colors duration-300 inline-flex items-center {{ not stats.rideNavigation.canGoPrevious ? 'pointer-events-none' : '' }}">
                            <svg class="w-4 h-4 md:w-3 md:h-3 md:me-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
                            </svg>
                            <span class="hidden md:inline">Précédent</span>
                        </a>
                        <span class="text-body font-base text-textPrimary px-3">{{ stats.rideNavigation.weekPeriod }}</span>
                        <a href="{{ path('admin_dashboard', {'ride_week': stats.rideNavigation.nextWeek, 'user_week': app.request.query.get('user_week') ?: stats.userNavigation.selectedWeek}) }}" 
                            class="text-body font-base {{ stats.rideNavigation.canGoNext ? 'text-textSecondary hover:text-accent' : 'text-tSecondaryLight cursor-not-allowed' }} transition-colors duration-300 inline-flex items-center {{ not stats.rideNavigation.canGoNext ? 'pointer-events-none' : '' }}">
                            <span class="hidden md:inline">Suivant</span>
                            <svg class="w-4 h-4 md:w-3 md:h-3 md:ms-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                            </svg>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts pour les graphiques -->
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <script>
        // Graphique en colonnes pour les utilisateurs
        const usersColumnChart = new ApexCharts(document.querySelector("#users-column-chart"), {
            chart: {
                type: 'bar',
                height: 192,
                background: 'transparent',
                toolbar: { show: false },
                fontFamily: 'Inter, sans-serif'
            },
            series: [{
                name: 'Nouveaux utilisateurs',
                data: {{ stats.weeklyUserData|json_encode|raw }}
            }],
            xaxis: {
                categories: {{ stats.userWeekLabels|json_encode|raw }},
                labels: {
                    style: { colors: '#6D4C41', fontSize: '12px' }
                },
                axisBorder: { show: false },
                axisTicks: { show: false }
            },
            yaxis: {
                labels: {
                    style: { colors: '#6D4C41', fontSize: '12px' }
                }
            },
            colors: ['#FFB74D'],
            states: {
                hover: {
                    filter: {
                        type: 'darken',
                        value: 0.15
                    }
                }
            },
            plotOptions: {
                bar: {
                    borderRadius: 4,
                    columnWidth: '70%'
                }
            },
            grid: {
                borderColor: '#FFB74D',
                strokeDashArray: 4
            },
            dataLabels: { enabled: false },
            tooltip: {
                theme: 'dark',
                style: { fontSize: '12px' }
            }
        });

        // Graphique en aires pour les trajets
        const ridesAreaChart = new ApexCharts(document.querySelector("#rides-area-chart"), {
            chart: {
                type: 'area',
                height: 192,
                background: 'transparent',
                toolbar: { show: false },
                fontFamily: 'Quicksand, sans-serif'
            },
            series: [{
                name: 'Trajets proposés',
                data: {{ stats.weeklyRideData|json_encode|raw }}
            }],
            xaxis: {
                categories: {{ stats.rideWeekLabels|json_encode|raw }},
                labels: {
                    style: { colors: '#6D4C41', fontSize: '12px' }
                },
                axisBorder: { show: false },
                axisTicks: { show: false }
            },
            yaxis: {
                labels: {
                    style: { colors: '#6D4C41', fontSize: '12px' }
                }
            },
            colors: ['#FFB74D'],
            fill: {
                type: 'gradient',
                gradient: {
                    shadeIntensity: 1,
                    opacityFrom: 0.7,
                    opacityTo: 0.1,
                    stops: [0, 100],
                    colorStops: [{
                        offset: 0,
                        color: '#FFB74D',
                        opacity: 0.7
                    }, {
                        offset: 100,
                        color: '#FFE0B2',
                        opacity: 0.1
                    }]
                }
            },
            stroke: {
                curve: 'smooth',
                width: 3
            },
            grid: {
                borderColor: '#FFB74D',
                strokeDashArray: 4
            },
            dataLabels: { enabled: false },
            tooltip: {
                theme: 'dark',
                style: { fontSize: '12px' }
            }
        });

        // Rendu des graphiques
        usersColumnChart.render();
        ridesAreaChart.render();
    </script>
{% endblock %}